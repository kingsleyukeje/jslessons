DataTypes
Will cover primitive and composite datatypes

Primitive
Declare a variable 'x', then assign a string value to it
Emphasize the difference between the variable declaration and the variable assignment

declare a variable 'boolish', then assign it a falsy value that is NOT the boolean "false"

primitive variables MUST be undefined at declaration.

Composite
Arrays
Declare a variable 'arrOne', then assign it an array that contains at least a number datatype, a boolean datatype, a nested array and an object.

log to the console at least 2 items from 'arrOne' and include at least one property from any object that is an item in 'arrOne' 
 
Objects
Declare a variable 'objectOne', then assign it an object that has at least 3 properties(key-value pairs) and one of the 3 properties must be an array that contains up to 4 items of various datatypes

log to the console 2 of the properties of 'objectOne' including at least one of the items from the array stored as a property in 'objectOne'

Functions/Methods
declare a function 'withFunctionKeyWord' -using the function keyword-that logs a string to the console when invoked

declare a function 'withExpression' -using a function expression-that logs a number to the console when invoked

declare a function 'arrowFunction' -using the arrow syntax -that logs a boolean to the console when invoked

declare a function 'withReturnValue' -using any declaration method of choice-that returns any number value when invoked

declare a function 'withParamValue' -using any declaration method of choice-that accepts a value as argument when invoked and returns that value

declare higher order function 'higherFunction' -using any declaration method of choice-that accepts two functions as arguments when invoked, and returns the sum of the invocations of both arguments as a return value

declare a function 'returnsThis' -that returns the value of 'this' when invoked. Then assign it to a property 'thisIsAMethod' in an object of your choice.
Invoke 'thisIsAMethod'

invoke 'thisIsAMethod' using the call explicit binding and manipulate the this to any value of choice.
